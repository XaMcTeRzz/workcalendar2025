import React, { useState, useEffect } from 'react';
import { Settings } from '../types';
import { fetchSettings, updateSettings } from '../services/api';
import '../styles/SettingsPage.css';

const SettingsPage: React.FC = () => {
  const [settings, setSettings] = useState<Settings>({
    telegram_bot_token: '',
    telegram_chat_id: '',
    enable_notifications: false,
    notification_time: 9,
    enable_voice_input: true,
    voice_language: 'uk-UA'
  });
  
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);

  useEffect(() => {
    const loadSettings = async () => {
      try {
        setLoading(true);
        const data = await fetchSettings();
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        const updatedData = {
          ...data,
          enable_voice_input: data.enable_voice_input !== undefined ? data.enable_voice_input : true,
          voice_language: data.voice_language || 'uk-UA'
        };
        setSettings(updatedData);
        setError(null);
      } catch (err) {
        setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        console.error('Error loading settings:', err);
      } finally {
        setLoading(false);
      }
    };

    loadSettings();
  }, []);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target;
    const checked = type === 'checkbox' ? (e.target as HTMLInputElement).checked : undefined;
    
    setSettings(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    try {
      setLoading(true);
      await updateSettings(settings);
      setSuccess('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
      setError(null);
      
      // –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => {
        setSuccess(null);
      }, 3000);
    } catch (err) {
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
      console.error('Error saving settings:', err);
      setSuccess(null);
    } finally {
      setLoading(false);
    }
  };

  // –¢–µ—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ SpeechRecognition
  const isSpeechRecognitionSupported = Boolean(
    window.SpeechRecognition || (window as any).webkitSpeechRecognition
  );

  return (
    <div className="settings-page">
      <h1 className="settings-title">
        <span className="settings-icon">‚öôÔ∏è</span>
        –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      </h1>
      
      {error && <div className="error-message">{error}</div>}
      {success && <div className="success-message">{success}</div>}
      
      {loading ? (
        <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...</div>
      ) : (
        <form onSubmit={handleSubmit} className="settings-form">
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ */}
          <div className="settings-card">
            <div className="settings-card-header">
              <span className="settings-card-icon">üé§</span>
              –ì–æ–ª–æ—Å–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—è
            </div>
            <div className="settings-card-body">
              {isSpeechRecognitionSupported ? (
                <>
                  <div className="form-check">
                    <input
                      type="checkbox"
                      id="enable_voice_input"
                      name="enable_voice_input"
                      checked={settings.enable_voice_input}
                      onChange={handleInputChange}
                    />
                    <label htmlFor="enable_voice_input">
                      –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—è
                      <span className="form-text">–î–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º—ñ–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É</span>
                    </label>
                  </div>
                  
                  <div className="form-group">
                    <label htmlFor="voice_language">–ú–æ–≤–∞ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è</label>
                    <select
                      id="voice_language"
                      name="voice_language"
                      value={settings.voice_language}
                      onChange={handleInputChange}
                      disabled={!settings.enable_voice_input}
                    >
                      <option value="uk-UA">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
                      <option value="ru-RU">–†–æ—Å—ñ–π—Å—å–∫–∞</option>
                      <option value="en-US">–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ (–°–®–ê)</option>
                      <option value="en-GB">–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ (–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω—ñ—è)</option>
                      <option value="de-DE">–ù—ñ–º–µ—Ü—å–∫–∞</option>
                      <option value="fr-FR">–§—Ä–∞–Ω—Ü—É–∑—å–∫–∞</option>
                      <option value="pl-PL">–ü–æ–ª—å—Å—å–∫–∞</option>
                    </select>
                  </div>
                </>
              ) : (
                <div className="browser-warning">
                  –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≥–æ–ª–æ—Å–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Chrome, Edge –∞–±–æ Safari.
                </div>
              )}
            </div>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram */}
          <div className="settings-card">
            <div className="settings-card-header">
              <span className="settings-card-icon">ü§ñ</span>
              –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram
            </div>
            <div className="settings-card-body">
              <div className="form-group">
                <label htmlFor="telegram_bot_token">–¢–æ–∫–µ–Ω –±–æ—Ç–∞</label>
                <input
                  type="text"
                  id="telegram_bot_token"
                  name="telegram_bot_token"
                  value={settings.telegram_bot_token}
                  onChange={handleInputChange}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞"
                />
                <small className="form-text">
                  –û—Ç—Ä–∏–º–∞–π—Ç–µ —Ç–æ–∫–µ–Ω —É <a href="https://t.me/BotFather" target="_blank" rel="noopener noreferrer">@BotFather</a>
                </small>
              </div>
              
              <div className="form-group">
                <label htmlFor="telegram_chat_id">ID —á–∞—Ç—É</label>
                <input
                  type="text"
                  id="telegram_chat_id"
                  name="telegram_chat_id"
                  value={settings.telegram_chat_id}
                  onChange={handleInputChange}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å ID —á–∞—Ç—É"
                />
                <small className="form-text">
                  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ <a href="https://t.me/userinfobot" target="_blank" rel="noopener noreferrer">@userinfobot</a> –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID
                </small>
              </div>
            </div>
          </div>
          
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
          <div className="settings-card">
            <div className="settings-card-header">
              <span className="settings-card-icon">üîî</span>
              –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
            </div>
            <div className="settings-card-body">
              <div className="form-check">
                <input
                  type="checkbox"
                  id="enable_notifications"
                  name="enable_notifications"
                  checked={settings.enable_notifications}
                  onChange={handleInputChange}
                />
                <label htmlFor="enable_notifications">
                  –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                  <span className="form-text">–û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ –∑–∞–¥–∞—á—ñ</span>
                </label>
              </div>
              
              <div className="form-group">
                <label htmlFor="notification_time">–ß–∞—Å —Å–ø–æ–≤—ñ—â–µ–Ω—å</label>
                <input
                  type="number"
                  id="notification_time"
                  name="notification_time"
                  value={settings.notification_time}
                  onChange={handleInputChange}
                  min="0"
                  max="23"
                  disabled={!settings.enable_notifications}
                />
                <small className="form-text">
                  –ì–æ–¥–∏–Ω–∞ –¥–æ–±–∏ (0-23), –∫–æ–ª–∏ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                </small>
              </div>
            </div>
          </div>
          
          <button type="submit" className="save-button" disabled={loading}>
            <span className="save-icon">üíæ</span>
            –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
        </form>
      )}
    </div>
  );
};

export default SettingsPage; 